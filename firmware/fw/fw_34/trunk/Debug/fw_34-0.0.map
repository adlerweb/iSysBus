Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_udivmodhi4.o)
                              ./main.o (__udivmodhi4)
/usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/libc.a(eerd_word.o)
                              ./main.o (__eerd_word)

Allocating common symbols
Common symbol       size              file

Isb_Systick_Clock   0x8               ./main.o
NUL                 0x1               ./main.o
Isb_Grp             0x60              ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x2ac2
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000068       0x60 ./main.o
                0x000000c8                . = ALIGN (0x2)
                0x000000c8                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000c8        0x0 linker stubs
 *(.trampolines*)
                0x000000c8                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000c8                __ctors_start = .
 *(.ctors)
                0x000000c8                __ctors_end = .
                0x000000c8                __dtors_start = .
 *(.dtors)
                0x000000c8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000c8        0x0 /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o
                0x000000c8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000c8        0xc /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000d4       0x16 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_copy_data.o)
                0x000000d4                __do_copy_data
 .init4         0x000000ea       0x10 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_clear_bss.o)
                0x000000ea                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000fa        0x8 /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x00000102        0x4 /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o
                0x00000102                __vector_22
                0x00000102                __vector_1
                0x00000102                __vector_24
                0x00000102                __vector_12
                0x00000102                __bad_interrupt
                0x00000102                __vector_6
                0x00000102                __vector_3
                0x00000102                __vector_23
                0x00000102                __vector_25
                0x00000102                __vector_11
                0x00000102                __vector_13
                0x00000102                __vector_17
                0x00000102                __vector_19
                0x00000102                __vector_7
                0x00000102                __vector_5
                0x00000102                __vector_4
                0x00000102                __vector_9
                0x00000102                __vector_2
                0x00000102                __vector_21
                0x00000102                __vector_15
                0x00000102                __vector_8
                0x00000102                __vector_10
                0x00000102                __vector_16
                0x00000102                __vector_18
                0x00000102                __vector_20
 .text          0x00000106     0x2964 ./main.o
                0x00001fde                Isb_Obj_Rx
                0x00000150                lib_eep_fw_read_byte
                0x0000093e                Isb_Systick_Exec
                0x00000268                Lib_Mcp2515_Read
                0x00000d6e                Isb_App_Exec
                0x00000116                lib_eep_read_byte
                0x0000025c                Inf_Spi_TxRx
                0x000027fe                lib_eep_fw_read_word
                0x00001fb4                Isb_SendMsg
                0x000005a2                Inf_Can_Tx
                0x00000c04                Lib_IntegerToFloat
                0x00001f20                Isb_Obj_getDlc
                0x00000716                Isb_Inf_Can_Rx
                0x000024c6                Isb_Config_Rx
                0x00000208                Inf_Spi_Init
                0x00000bac                Isb_App_Convert_PT100
                0x00000166                lib_eep_fw_write_byte
                0x00000252                Inf_Spi_Tx
                0x00000ae0                Isb_Systick_Irq_Timer
                0x000001a2                Lib_Pin_Get
                0x0000082e                Isb_Inf_Can_Tx
                0x00000126                lib_eep_write_byte
                0x00000352                Inf_Can_Init
                0x000002fa                Lib_Mcp2515_Modify
                0x000001c6                Lib_Pin_Set
                0x00000ba2                Isb_App_Init
                0x00002820                main
                0x00001f4c                Isb_Grp_Init
                0x000006de                Isb_Inf_Can_Init
                0x00000246                Inf_Spi_Rx
                0x00000908                Isb_Systick_Init
                0x00000480                Inf_Can_Rx
                0x0000225e                Isb_Obj_Exec
                0x00001fb2                Node_Reboot
                0x00000ba4                Isb_App_Convert_None
                0x00002816                lib_eep_read_word
                0x00000bb8                Lib_FloatToInteger
                0x00000b34                __vector_14
                0x000002b0                Lib_Mcp2515_Write
 .text          0x00002a6a        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00002a6a        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_exit.o)
 .text          0x00002a6a        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_copy_data.o)
 .text          0x00002a6a        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x00002a6a       0x2c /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/libc.a(eerd_word.o)
                0x00002a6a                __eerd_word
                0x00002a96                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00002a96       0x28 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00002a96                __udivmodhi4
 .text.libgcc   0x00002abe        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00002abe        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00002abe        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_clear_bss.o)
                0x00002abe                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00002abe        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_exit.o)
                0x00002abe                exit
                0x00002abe                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00002abe        0x4 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00002ac2                _etext = .

.data           0x00800100       0x40 load address 0x00002ac2
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o
 .data          0x00800100       0x40 ./main.o
                0x00800100                Isb_Firmware_Code
                0x00800114                PORTx
                0x00800104                DDRx
                0x00800124                PINx
                0x00800134                daysPerMonth
 .data          0x00800140        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800140        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_exit.o)
 .data          0x00800140        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_copy_data.o)
 .data          0x00800140        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x00800140        0x0 /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/libc.a(eerd_word.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800140                . = ALIGN (0x2)
                0x00800140                _edata = .
                0x00800140                PROVIDE (__data_end, .)

.bss            0x00800140      0x224 load address 0x00002b02
                0x00800140                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800140        0x0 /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o
 .bss           0x00800140      0x1bb ./main.o
                0x00800143                Isb_Systick_Delay_Counter
                0x00800140                Isb_Systick_Ctrl
                0x00800141                Isb_Systick_IrqClock
 .bss           0x008002fb        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x008002fb        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_exit.o)
 .bss           0x008002fb        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x008002fb        0x0 /usr/lib/gcc/avr/4.3.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x008002fb        0x0 /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/libc.a(eerd_word.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008002fb       0x69 ./main.o
                0x008002fb                Isb_Systick_Clock
                0x00800303                NUL
                0x00800304                Isb_Grp
                0x00800364                PROVIDE (__bss_end, .)
                0x00002ac2                __data_load_start = LOADADDR (.data)
                0x00002b02                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800364        0x0
                0x00800364                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800364                PROVIDE (__noinit_end, .)
                0x00800364                _end = .
                0x00800364                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x5acc
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o
 .stab          0x000006b4     0x50ac ./main.o
                               0x50b8 (size before relaxing)
 .stab          0x00005760      0x36c /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/libc.a(eerd_word.o)
                                0x378 (size before relaxing)

.stabstr        0x00000000     0x2758
 *(.stabstr)
 .stabstr       0x00000000     0x2758 /usr/lib/gcc/avr/4.3.2/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(fw_34-0.0.elf elf32-avr)
LOAD linker stubs
